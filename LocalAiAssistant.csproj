<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net8.0-android34.0</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.22621.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>LocalAiAssistant</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>LocalAiAssistant</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.TwinLunarStarZ.localaiassistant</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">14.0</SupportedOSPlatformVersion>-->
		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>-->
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">28.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">34.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.19041.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.22621.0</TargetPlatformMinVersion>
		<AndroidSigningKeyStore></AndroidSigningKeyStore>
		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>-->
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-android|AnyCPU'">
	  <AndroidKeyStore>False</AndroidKeyStore>
	  <AndroidSigningStorePass></AndroidSigningStorePass>
	  <AndroidSigningKeyAlias></AndroidSigningKeyAlias>
	  <AndroidSigningKeyPass></AndroidSigningKeyPass>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-android|AnyCPU'">
	  <AndroidKeyStore>False</AndroidKeyStore>
	  <AndroidSigningStorePass></AndroidSigningStorePass>
	  <AndroidSigningKeyAlias></AndroidSigningKeyAlias>
	  <AndroidSigningKeyPass></AndroidSigningKeyPass>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-android34.0|AnyCPU'">
	  <AndroidKeyStore>False</AndroidKeyStore>
	  <AndroidSigningStorePass></AndroidSigningStorePass>
	  <AndroidSigningKeyAlias></AndroidSigningKeyAlias>
	  <AndroidSigningKeyPass></AndroidSigningKeyPass>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-android34.0|AnyCPU'">
	  <AndroidKeyStore>False</AndroidKeyStore>
	  <AndroidSigningStorePass></AndroidSigningStorePass>
	  <AndroidSigningKeyAlias></AndroidSigningKeyAlias>
	  <AndroidSigningKeyPass></AndroidSigningKeyPass>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.png" Resize="True" BaseSize="300,185" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
	  <MauiAsset Include="Resources\Strings.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiAsset>
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Maui" Version="7.0.1" />
		<PackageReference Include="CommunityToolkit.Maui.MediaElement" Version="3.0.1" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.2" />
		<PackageReference Include="Microsoft.Maui.Controls" Version="8.0.7" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="8.0.7" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
		<PackageReference Include="System.Drawing.Common" Version="8.0.2" />
		<PackageReference Include="System.Data.SqlClient" Version="4.8.6" />
		<PackageReference Include="System.Text.Json" Version="8.0.2" />
		<PackageReference Include="Tesseract" Version="5.2.0" />
		<PackageReference Include="Tesseract.Drawing" Version="5.2.0" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="InfoPage.xaml.cs">
	    <DependentUpon>InfoPage.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="ImageGenerationSettings.xaml.cs">
	    <DependentUpon>ImageGenerationSettings.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="TextGenerationSettings.xaml.cs">
	    <DependentUpon>TextGenerationSettings.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="TextGeneration.xaml.cs">
	    <DependentUpon>TextGeneration.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="GeneralSettings.xaml.cs">
	    <DependentUpon>GeneralSettings.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="AudioGeneration.xaml.cs">
	    <DependentUpon>AudioGeneration.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="ImageGeneration.xaml.cs">
	    <DependentUpon>ImageGeneration.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="VideoGeneration.xaml.cs">
	    <DependentUpon>VideoGeneration.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="AudioGenerationSettings.xaml.cs">
	    <DependentUpon>AudioGenerationSettings.xaml</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="VideoGeneration.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="AudioGeneration.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="AudioGenerationSettings.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="License.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="GeneralSettings.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="ImageGenerationSettings.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

</Project>
